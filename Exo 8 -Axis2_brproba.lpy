from math import exp
from random import uniform

def expansion(t, a, delai):
    "croissance sigmoidale"
    return 1/(1+exp(-a*(t-delai)))

Lfeuille = 0.9
Lpetiole = 0.9
Len = 1
Dtige = 0.07
phyllochron = 20 
a = 0.05
delaiF = 50
delaiE = 0
delaiLbud = 2*phyllochron
probaDeb = 0.75

def StartEach():
  global dotest
  dotest = ((getIterationNb()/phyllochron % 2) == 0)

Axiom: &(90)A(0)

derivation length: 15*phyllochron
production:
A(age):
    if age >= phyllochron and dotest == True: #branche a +45
        produce En(0)[Pet(0)Leaf(0)][+(45)B(-delaiLbud, uniform(0.,1.))]A(0)
    elif age >= phyllochron and dotest == False: #branche a -45
        produce En(0)[Pet(0)Leaf(0)][-(45)B(-delaiLbud, uniform(0.,1.))]A(0)
    else:
      produce A(age+1)

En(age) --> En(age+1)
Pet(age) --> Pet(age+1)
Leaf(age) --> Leaf(age+1)

B(age, proba):
    if age == phyllochron and proba<probaDeb :
      produce En(0)[Pet(0)Leaf(0)]B(0, proba)
    else:
      produce B(age+1, proba)



interpretation:
En(age) --> SetColor(2)F(Len*expansion(age, a, delaiE),Dtige)
A(age) --> SetColor(3)Sphere(1.3*Dtige)
Pet(age) --> SetColor(2)^(90)F(Lpetiole*expansion(age, a, delaiF),0.75*Dtige)
Leaf(age) :
    l = Lfeuille*expansion(age, a, delaiF)
    produce SetColor(2)^(90)f(l/2)@o(l/2)

B(age, proba) --> SetColor(4)Sphere(1.3*Dtige)

endlsystem
